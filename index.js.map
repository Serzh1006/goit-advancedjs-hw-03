{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export const fetchByValue = searchWord => {\n  try {\n    return fetch(\n      `https://pixabay.com/api/?key=36524518-a58dcdc8b7630db8edc13e4de&q=${searchWord}&image_type=photo&orientation=horizontal&safesearch=true`\n    ).then(res => {\n      if (!res.ok) {\n        throw new Error(res.status);\n      }\n      return res.json();\n    });\n  } catch (error) {\n    console.log(error, '500: Server error!');\n  }\n};\n","export const renderBySearch = listPhotos => {\n  return listPhotos.reduce(\n    (\n      acc,\n      { webformatURL, largeImageURL, tags, likes, views, comments, downloads }\n    ) => {\n      return (\n        acc +\n        `<li class=\"gallery-item\">\n    <div class=\"img-wrap\">\n      <a class=\"gallery-link\" href=\"${largeImageURL}\">\n          <img src=\"${webformatURL}\" alt=\"${tags}\" width=\"360\" />\n          </a></div>\n        <div class=\"gallery-wrap-info\">\n          <div class=\"second-wrap-info\">\n            <h2 class=\"gallery-info-title\">likes</h2>\n            <p class=\"gallery-info-text\">${likes}</p>\n          </div>\n          <div class=\"second-wrap-info\">\n            <h2 class=\"gallery-info-title\">views</h2>\n            <p class=\"gallery-info-text\">${views}</p>\n          </div>\n          <div class=\"second-wrap-info\">\n            <h2 class=\"gallery-info-title\">comments</h2>\n            <p class=\"gallery-info-text\">${comments}</p>\n          </div>\n          <div class=\"second-wrap-info\">\n            <h2 class=\"gallery-info-title\">downloads</h2>\n            <p class=\"gallery-info-text\">${downloads}</p>\n          </div>\n        </div>\n    </li>`\n      );\n    },\n    ''\n  );\n};\n","import { fetchByValue } from './js/pixabay-api.js';\nimport { renderBySearch } from './js/render-functions.js';\n\nconst gallery = document.querySelector('.gallery');\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const textByUser = e.target.elements[0].value;\n  if (textByUser.trim() === '') {\n    console.log('Please enter text!');\n    return;\n  }\n  fetchByValue(textByUser.trim())\n    .then(data => {\n      if (data.hits.length === 0) {\n        console.log(\n          'Sorry, there are no images matching your search query. Please try again!'\n        );\n        gallery.innerHTML = '';\n        form.reset();\n        return;\n      }\n      const markup = renderBySearch(data.hits);\n      gallery.innerHTML = markup;\n      form.reset();\n    })\n    .catch(err => console.log(err));\n});\n"],"names":["fetchByValue","searchWord","res","error","renderBySearch","listPhotos","acc","webformatURL","largeImageURL","tags","likes","views","comments","downloads","gallery","form","e","textByUser","data","markup","err"],"mappings":"ssBAAO,MAAMA,EAAeC,GAAc,CACxC,GAAI,CACF,OAAO,MACL,qEAAqEA,CAAU,0DACrF,EAAM,KAAKC,GAAO,CACZ,GAAI,CAACA,EAAI,GACP,MAAM,IAAI,MAAMA,EAAI,MAAM,EAE5B,OAAOA,EAAI,MACjB,CAAK,CACF,OAAQC,EAAO,CACd,QAAQ,IAAIA,EAAO,oBAAoB,CACxC,CACH,ECbaC,EAAiBC,GACrBA,EAAW,OAChB,CACEC,EACA,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IAGtEP,EACA;AAAA;AAAA,sCAE8BE,CAAa;AAAA,sBAC7BD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,2CAKLC,CAAK;AAAA;AAAA;AAAA;AAAA,2CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,2CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,2CAIRC,CAAS;AAAA;AAAA;AAAA,WAMhD,EACJ,EChCMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,GAAK,CACnCA,EAAE,eAAc,EAChB,MAAMC,EAAaD,EAAE,OAAO,SAAS,CAAC,EAAE,MACxC,GAAIC,EAAW,KAAM,IAAK,GAAI,CAC5B,QAAQ,IAAI,oBAAoB,EAChC,MACD,CACDjB,EAAaiB,EAAW,MAAM,EAC3B,KAAKC,GAAQ,CACZ,GAAIA,EAAK,KAAK,SAAW,EAAG,CAC1B,QAAQ,IACN,0EACV,EACQJ,EAAQ,UAAY,GACpBC,EAAK,MAAK,EACV,MACD,CACD,MAAMI,EAASf,EAAec,EAAK,IAAI,EACvCJ,EAAQ,UAAYK,EACpBJ,EAAK,MAAK,CAChB,CAAK,EACA,MAAMK,GAAO,QAAQ,IAAIA,CAAG,CAAC,CAClC,CAAC"}